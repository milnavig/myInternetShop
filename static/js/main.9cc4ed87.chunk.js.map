{"version":3,"sources":["logo.svg","utils/consts.js","pages/Basket.js","http/index.js","http/deviceAPI.js","components/modals/CreateBrand.js","components/modals/CreateType.js","components/modals/CreateDevice.js","pages/Admin.js","components/BrandBar.js","components/DeviceItem.js","components/DeviceList.js","components/TypeBar.js","components/Slider.js","assets/1.jpg","assets/2.jpg","assets/3.jpg","components/Pages.js","pages/Shop.js","http/userAPI.js","pages/Auth.js","http/commentAPI.js","components/Comments.js","pages/DevicePage.js","routes.js","components/AppRouter.js","assets/flower.svg","assets/home.svg","assets/cart.svg","components/NavBar.js","components/Footer.js","components/Chat.js","App.js","reportWebVitals.js","store/UserStore.js","store/DeviceStore.js","index.js"],"names":["ADMIN_ROUTE","LOGIN_ROUTE","REGISTRATION_ROUTE","SHOP_ROUTE","BASKET_ROUTE","ABOUTUS_ROUTE","Basket","observer","user","useContext","Context","history","useHistory","Container","className","goods","map","el","Card","style","width","cursor","onClick","push","DEVICE_ROUTE","id","Image","height","src","process","img","Body","Title","brand","name","Text","Footer","rating","starRatedColor","numberOfStars","starHoverColor","starDimension","starSpacing","$host","axios","create","baseURL","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","createType","type","a","post","data","fetchTypes","get","createBrand","fetchBrands","createDevice","device","fetchDevices","typeId","brandId","page","limit","params","fetchOneDevice","sendDeviceRating","obj","CreateBrand","show","onHide","useState","value","setValue","Modal","size","centered","Header","closeButton","Form","Control","onChange","e","target","placeholder","Button","variant","then","CreateType","CreateDevice","setName","price","setPrice","file","setFile","info","setInfo","useEffect","t","setTypes","setBrands","changeInfo","key","number","i","Dropdown","Toggle","selectedType","Menu","types","Item","setSelectedType","selectedBrand","brands","setSelectedBrand","Number","console","log","files","title","description","Date","now","Row","Col","md","filter","formData","FormData","append","String","JSON","stringify","res","Admin","brandVisible","setBrandVisible","typeVisible","setTypeVisible","deviceVisible","setDeviceVisible","BrandBar","ListGroup","horizontal","active","DeviceItem","DeviceList","devices","d","TypeBar","Slider","Carousel","minHeight","nextLabel","prevLabel","alt","Caption","Pages","pagesCount","Math","ceil","total","pages","Pagination","setPage","activeLabel","Shop","setDevices","rows","setTotalCount","count","registration","email","password","username","role","setItem","token","jwt_decode","login","check","Auth","isLogin","useLocation","pathname","setEmail","setPassword","setUsername","click","setUser","setIsAuth","alert","response","message","window","innerHeight","display","to","sendComment","comment","fetchComments","deviceId","Comments","props","comments","setComments","userComment","setUserComment","c","isAuth","Group","controlId","Label","as","text","Alert","textDecoration","Subtitle","timestamp","replace","toLocaleString","DevicePage","context","setDevice","useParams","isItLiked","likedDevice","find","changeRating","setLikedDevice","likeDevice","fontSize","setGoods","Table","striped","bordered","hover","authRoutes","path","Component","publicRoutes","AppRouter","component","exact","NavBar","Navbar","backgroundColor","collapseOnSelect","expand","flower","paddingLeft","color","alignItems","Collapse","Nav","Link","home","marginRight","NavDropdown","href","Divider","cart","removeItem","margin","undefined","Chat","state","messageList","connected","socket","React","createRef","this","connect","current","WebSocket","onopen","setState","onmessage","event","author","parse","onclose","onerror","send","length","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","bind","showEmoji","loading","setLoading","finally","Spinner","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserStore","_isAuth","_user","_goods","makeAutoObservable","bool","DeviceStore","_types","_brands","_devices","raiting","_selectedType","_selectedBrand","_page","_totalCount","_limit","_likedDevice","arr","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.9cc4ed87.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export const ADMIN_ROUTE = '/admin';\r\nexport const LOGIN_ROUTE = '/login';\r\nexport const REGISTRATION_ROUTE = '/registration';\r\nexport const SHOP_ROUTE = '/';\r\nexport const BASKET_ROUTE = '/basket';\r\nexport const DEVICE_ROUTE = '/device';\r\nexport const ABOUTUS_ROUTE = '/about';\r\nexport const GALLERY_ROUTE = '/gallery';","import { observer } from 'mobx-react-lite';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../index';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { Card, Container, Image } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DEVICE_ROUTE } from '../utils/consts';\r\n\r\nconst Basket = observer(() => {\r\n    const { user } = useContext(Context);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n            <h2 className=\"mt-4\">My basket: </h2>\r\n            { user.goods.map(el => \r\n            <Card style={{width: '250px', cursor: 'pointer'}} className=\"mt-4 mb-4\" onClick={() => history.push(DEVICE_ROUTE + '/' + el.id)}>\r\n                <Image width={'100%'} height={'auto'} src={process.env.REACT_APP_API_URL + el.img}>\r\n                    </Image>\r\n                <Card.Body>\r\n                <Card.Title>{el.brand?.name}</Card.Title>\r\n                <Card.Text>\r\n                    {el.name}\r\n                </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                \r\n                    <StarRatings\r\n                        rating={el.rating}\r\n                        starRatedColor=\"blue\"\r\n                        numberOfStars={5}\r\n                        starHoverColor={'yellow'}\r\n                        name='rating'\r\n                        starDimension='20px'\r\n                        starSpacing='4px'\r\n                    />\r\n                </Card.Footer>\r\n            </Card>\r\n            )}\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Basket;","import axios from 'axios';\r\n\r\nconst $host = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nconst $authHost = axios.create({\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\r\n    return config;\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\nexport {$host, $authHost}","import {$host, $authHost} from './index';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const createType = async (type) => {\r\n    const { data } = await $authHost.post('api/type', type);\r\n    return data;\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const { data } = await $host.get('api/type');\r\n    return data;\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const { data } = await $authHost.post('api/brand', brand);\r\n    return data;\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const { data } = await $host.get('api/brand');\r\n    return data;\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const { data } = await $authHost.post('api/device', device);\r\n    return data;\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit=5) => {\r\n    const { data } = await $host.get('api/device', {params: {typeId, brandId, page, limit}});\r\n    return data;\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const { data } = await $host.get('api/device/' + id);\r\n    return data;\r\n}\r\n\r\nexport const sendDeviceRating = async (obj) => {\r\n    const { data } = await $host.post('api/device/action/like', obj);\r\n    return data;\r\n}","import { useContext, useState } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { createBrand } from '../../http/deviceAPI';\r\n\r\nexport const CreateBrand = ({show, onHide}) => {\r\n    let [value, setValue] = useState('');\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('');\r\n            onHide();\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a new type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Add the name of the new type\"></Form.Control>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={onHide}>Close</Button>\r\n                <Button variant={\"outline-success\"} onClick={addBrand}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import { useContext, useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport { createType } from '../../http/deviceAPI';\r\n\r\nexport const CreateType = ({show, onHide}) => {\r\n    let [value, setValue] = useState('');\r\n    const addType = () => {\r\n        createType({name: value}).then(data => {\r\n            setValue('');\r\n            onHide();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a new type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Add the name of the new type\"></Form.Control>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={onHide}>Close</Button>\r\n                <Button variant={\"outline-success\"} onClick={addType}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import { useContext, useEffect, useState } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Modal, Form, Button, Dropdown, Row, Col } from 'react-bootstrap';\r\nimport { Context } from '../../index';\r\nimport { createDevice, fetchBrands, fetchTypes } from '../../http/deviceAPI';\r\n\r\nexport const CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context);\r\n    let [name, setName] = useState('');\r\n    let [price, setPrice] = useState(0);\r\n    let [file, setFile] = useState(null);\r\n    let [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then((t) => device.setTypes(t));\r\n        fetchBrands().then((t) => device.setBrands(t));\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}]);\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number));\r\n    }\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i));\r\n    }\r\n\r\n    const selectFile = e => {\r\n        console.log(e.target.files);\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', String(price));\r\n        formData.append('img', file);\r\n        formData.append('brandId', device.selectedBrand.id);\r\n        formData.append('typeId', device.selectedType.id);\r\n        formData.append('info', JSON.stringify(info));\r\n        createDevice(formData).then(res => onHide());\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a new type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>\r\n                            {device.selectedType.name || 'Select type'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type => \r\n                            <Dropdown.Item key={type.id} onClick={() => device.setSelectedType(type)}>\r\n                                {type.name}\r\n                            </Dropdown.Item>)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>\r\n                            {device.selectedBrand.name || 'Select brand'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand => \r\n                            <Dropdown.Item key={brand.id} onClick={() => device.setSelectedBrand(brand)}>\r\n                                {brand.name}\r\n                            </Dropdown.Item>)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control placeholder=\"Enter the name of device\" className=\"mt-3\" value={name} onChange={e => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                    <Form.Control placeholder=\"Enter the price of device\" type='number' className=\"mt-3\" value={price} onChange={e => setPrice(Number(e.target.value))}>\r\n                    </Form.Control>\r\n                    <Form.Control type='file' className=\"mt-3\" onChange={selectFile}>\r\n                    </Form.Control>\r\n                    <hr />\r\n                    <Button onClick={addInfo}>Add a new property</Button>\r\n                    {info.map(i => \r\n                        <Row className=\"mt-2\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control placeholder=\"Enter a name of the property\" value={i.title}\r\n                                onChange={(e) => changeInfo('title', e.target.value, i.number)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control placeholder=\"Enter a description of the property\" value={i.description} \r\n                                onChange={(e) => changeInfo('description', e.target.value, i.number)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button variant=\"outline-danger\" onClick={() => removeInfo(i.number)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={onHide}>Close</Button>\r\n                <Button variant={\"outline-success\"} onClick={addDevice}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});","import { Button, Container } from \"react-bootstrap\";\r\nimport { CreateBrand } from \"../components/modals/CreateBrand\";\r\nimport { CreateType } from \"../components/modals/CreateType\";\r\nimport { CreateDevice } from \"../components/modals/CreateDevice\";\r\nimport { useState } from \"react\";\r\n\r\nconst Admin = () => {\r\n    let [brandVisible, setBrandVisible] = useState(false);\r\n    let [typeVisible, setTypeVisible] = useState(false);\r\n    let [deviceVisible, setDeviceVisible] = useState(false);\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column mt-4 mb-4\">\r\n            <Button variant={'outline-dark'} onClick={() => setTypeVisible(true)} className=\"mt-2\">\r\n                Add type\r\n            </Button>\r\n            <Button variant={'outline-dark'} onClick={() => setBrandVisible(true)} className=\"mt-2\">\r\n                Add brand\r\n            </Button>\r\n            <Button variant={'outline-dark'} onClick={() => setDeviceVisible(true)} className=\"mt-2\">\r\n                Add device\r\n            </Button>\r\n            <CreateBrand show={brandVisible} onHide={() => setBrandVisible(false)}></CreateBrand>\r\n            <CreateType show={typeVisible} onHide={() => setTypeVisible(false)}></CreateType>\r\n            <CreateDevice show={deviceVisible} onHide={() => setDeviceVisible(false)}></CreateDevice>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Admin;","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport const BrandBar = observer(() => {\r\n    const {device} = useContext(Context);\r\n    return (\r\n        <ListGroup horizontal>\r\n            {device.brands.map(brand =>\r\n                <ListGroup.Item key={brand.id} onClick={() => device.selectedBrand.id === brand.id ? device.setSelectedBrand({}) : device.setSelectedBrand(brand)}\r\n                active={device.selectedBrand.id === brand.id}\r\n                >{brand.name}</ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { Card, Col, Image, Row } from 'react-bootstrap';\r\nimport star from '../assets/star.png'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DEVICE_ROUTE } from '../utils/consts';\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nexport const DeviceItem = observer(({device}) => {\r\n    const history = useHistory();\r\n    return (\r\n        <Col md={3} className=\"mt-3\" className=\"d-flex \">\r\n            \r\n            <Card style={{width: '300px', cursor: 'pointer'}} className=\"mt-4 mb-4\" onClick={() => history.push(DEVICE_ROUTE + '/' + device.id)}>\r\n                <Image width={'100%'} height={'auto'} src={process.env.REACT_APP_API_URL + device.img}>\r\n                </Image>\r\n                <Card.Body>\r\n                <Card.Title>{device.brand?.name}</Card.Title>\r\n                <Card.Text>\r\n                    {device.name}\r\n                </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                \r\n                    <StarRatings\r\n                        rating={device.rating}\r\n                        starRatedColor=\"blue\"\r\n                        numberOfStars={5}\r\n                        starHoverColor={'yellow'}\r\n                        name='rating'\r\n                        starDimension='20px'\r\n                        starSpacing='4px'\r\n                    />\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    );\r\n});","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { Card, Row } from 'react-bootstrap';\r\nimport { DeviceItem } from './DeviceItem';\r\n\r\nexport const DeviceList = observer(() => {\r\n    const {device} = useContext(Context);\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {device.devices.map(d =>\r\n                <DeviceItem key={d.id} device={d}></DeviceItem>\r\n            )}\r\n        </Row>\r\n    );\r\n});","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport const TypeBar = observer(() => {\r\n    const {device} = useContext(Context);\r\n    return (\r\n        <ListGroup className=\"mb-4\">\r\n            {device.types.map((type) => <ListGroup.Item key={type.id}\r\n            style={{cursor: 'pointer'}}\r\n            active={type.id === device.selectedType.id}\r\n            onClick={() => device.selectedType.id === type.id ? device.setSelectedType({}) : device.setSelectedType(type)}\r\n            >{type.name}</ListGroup.Item>)}\r\n        </ListGroup>\r\n    );\r\n});","import { Carousel } from \"react-bootstrap\";\r\nimport { sliderItems } from \"./SliderItems\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from \"../index\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const Slider = observer(() => {\r\n    const {device} = useContext(Context);\r\n    console.log({...device.devices[0].brand}.name)\r\n\r\n    return (\r\n        <Carousel className=\"carousel-dark\" style={{height:'450px', minHeight:300}} nextLabel=\"\" prevLabel=\"\" >\r\n            {device.devices.map(i =>\r\n                <Carousel.Item style={{height:'450px', minHeight:300}}>\r\n                <img\r\n                    className=\"d-block w-100 img\"\r\n                    src={process.env.REACT_APP_API_URL + i.img}\r\n                    alt={i.name}\r\n                />\r\n                <Carousel.Caption>\r\n                    <h3>{i.brand?.name + ' ' + i.name}</h3>\r\n                    <p>{\"description\"}</p>\r\n                </Carousel.Caption>\r\n            </Carousel.Item>\r\n            )}\r\n        </Carousel>\r\n    );\r\n});\r\n\r\n","export default __webpack_public_path__ + \"static/media/1.fd8c8b1b.jpg\";","export default __webpack_public_path__ + \"static/media/2.f6e77648.jpg\";","export default __webpack_public_path__ + \"static/media/3.7e35ce28.jpg\";","import { useContext } from 'react';\r\nimport { Context } from \"../index\";\r\nimport { Navbar, Container, Nav, Button, Pagination } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from '../utils/consts';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Pages = observer(() => {\r\n    const {device} = useContext(Context);\r\n    const pagesCount = Math.ceil(device.total / device.limit);\r\n    const pages = [];\r\n\r\n    for (let i = 0; i < pagesCount; i++) {\r\n        pages.push(i + 1);\r\n    }\r\n\r\n    return (\r\n        <Pagination className=\"m-t-5 mt-2\">\r\n            {pages.map(page => {\r\n                return <Pagination.Item\r\n                key={page}\r\n                active={device.page === page}\r\n                onClick={() => device.setPage(page)}\r\n                activeLabel=\"\">\r\n                    {page}\r\n                </Pagination.Item>\r\n            })}\r\n        </Pagination>\r\n    );\r\n});\r\n\r\nexport default Pages;","import { observer } from \"mobx-react-lite\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Context } from \"../index\";\r\nimport { BrandBar } from \"../components/BrandBar\";\r\nimport { DeviceList } from \"../components/DeviceList\";\r\nimport { TypeBar } from \"../components/TypeBar\";\r\nimport { Slider } from \"../components/Slider\";\r\nimport { fetchTypes, fetchBrands, fetchDevices } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    let {device} = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then((t) => device.setTypes(t));\r\n        fetchBrands().then((t) => device.setBrands(t));\r\n        fetchDevices(null, null, 1, 4).then((t) => {\r\n            device.setDevices(t.rows);\r\n            device.setTotalCount(t.count);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 4).then((t) => {\r\n            console.log(t.count);\r\n            device.setDevices(t.rows);\r\n            device.setTotalCount(t.count);\r\n            console.log(device.total);\r\n        });\r\n        console.log({...device.selectedBrand}.id);\r\n        console.log({...device.selectedType});\r\n\r\n        //console.log(device.page);\r\n        //console.log(device.total);\r\n        //console.log(device.limit);\r\n    }, [device.page, device.selectedType, device.selectedBrand]);\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"d-flex align-items-center justify-content-center mt-3\">\r\n                <Col md={8}>\r\n                    <Slider></Slider>\r\n                </Col>\r\n            </Row>            \r\n            <Row className=\"mt-3\">\r\n                <Col md={3}>\r\n                    <TypeBar></TypeBar>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar />\r\n                    <DeviceList></DeviceList>\r\n                    <Pages></Pages>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;","import {$host, $authHost} from './index';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registration = async (email, password, username) => {\r\n    const { data } = await $host.post('api/user/registration', {email, password, username, role: 'USER'});\r\n    localStorage.setItem('token', data.token);\r\n    return jwt_decode(data.token);\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $host.post('api/user/login', {email, password});\r\n    localStorage.setItem('token', data.token);\r\n    console.log(data.token);\r\n    return jwt_decode(data.token);\r\n}\r\n\r\nexport const check = async () => {\r\n    const { data } = await $authHost.get('api/user/auth');\r\n    localStorage.setItem('token', data.token);\r\n    return jwt_decode(data.token);\r\n}","import { useState, useContext } from 'react';\r\nimport { Button, Card, Container, Form, Row } from 'react-bootstrap';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { registration, login } from '../http/userAPI';\r\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from '../utils/consts';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Auth = observer(() => {\r\n    let { user } = useContext(Context);\r\n    const location = useLocation();\r\n    const isLogin = location.pathname === LOGIN_ROUTE;\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const history = useHistory();\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            }\r\n            else {\r\n                data = await registration(email, password, username);\r\n                console.log(data);\r\n            }\r\n            \r\n            user.setUser(data);\r\n            user.setIsAuth(true);\r\n            history.push(SHOP_ROUTE);\r\n        } catch(e) {\r\n            alert(e.response.data.message);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\"\r\n        style={{height: window.innerHeight - 54}}>\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{ isLogin ? 'Authorization' : 'Registration' }</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    { isLogin || \r\n                    <Form.Control className=\"mt-4\"\r\n                    placeholder=\"Enter your username\" value={username} onChange={(e) => setUsername(e.target.value)}>\r\n                    </Form.Control>\r\n                    }\r\n                    <Form.Control className=\"mt-4\"\r\n                    placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                    <Form.Control className=\"mt-4\"\r\n                    placeholder=\"Enter your password\" value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\">\r\n                    </Form.Control>\r\n\r\n                    <Row className=\"d-flex justify-content-between mt-4\">\r\n                        { isLogin ? \r\n                        <div style={{display: 'inline'}}>\r\n                            Not registered yet? <NavLink to={REGISTRATION_ROUTE} >Register!</NavLink>\r\n                        </div>\r\n                        :\r\n                        <div style={{display: 'inline'}}>\r\n                            Have your own account? <NavLink to={LOGIN_ROUTE} >Login!</NavLink>\r\n                        </div>\r\n                        }\r\n                        <Button variant=\"outline-success\" className=\"mt-2\" onClick={isLogin ? click : click}>{isLogin ? 'Enter' : 'Register'}</Button>\r\n                    </Row>\r\n                    \r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;","import {$host, $authHost} from './index';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const sendComment = async (comment) => {\r\n    const { data } = await $authHost.post('api/device/action/comment', comment);\r\n    return data;\r\n}\r\n\r\nexport const fetchComments = async (deviceId) => {\r\n    const { data } = await $host.get('api/device/action/comment/' + deviceId);\r\n    return data;\r\n}\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { fetchComments, sendComment } from '../http/commentAPI';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LOGIN_ROUTE } from '../utils/consts';\r\n\r\nexport const Comments = observer((props) => {\r\n    const {device, user} = useContext(Context);\r\n    let [ comments, setComments ] = useState([]);\r\n    let [ userComment, setUserComment ] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchComments(props.deviceId).then(c => setComments(c));\r\n        console.log(comments);\r\n    }, []);\r\n\r\n    function toComment() {\r\n        console.log({text: userComment, deviceId: props.deviceId})\r\n        sendComment({text: userComment, deviceId: props.deviceId});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Comments</h2>\r\n            { user.isAuth ?\r\n            <>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Type your comment:</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Your comment...\" onChange={(e) => setUserComment(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"sm\" onClick={toComment}>\r\n                    Send\r\n                </Button>\r\n            </>\r\n            :\r\n            <Alert variant='primary'>\r\n                You need to login or register to comment this device. {' '}\r\n                <NavLink to={LOGIN_ROUTE} style={{textDecoration: 'none'}}>\r\n                    Login\r\n                </NavLink>\r\n            </Alert>\r\n            }\r\n            \r\n            {comments.map((e, i) => \r\n            <Card key={i} className=\"mt-2\">\r\n                <Card.Body>\r\n                    <Card.Title>{'Author: ' + e.user.username}</Card.Title>\r\n                    <Card.Text>\r\n                    {e.text}\r\n                    </Card.Text>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{(new Date(e.timestamp.replace(' ', 'T'))).toLocaleString()}</Card.Subtitle>\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n});","import { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Image, Row, Table } from \"react-bootstrap\";\r\nimport star from '../assets/star.png';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchOneDevice, sendDeviceRating } from \"../http/deviceAPI\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { Comments } from '../components/Comments';\r\n\r\nconst DevicePage = observer(() => {\r\n    /*\r\n    const device = {id: 5, name: 'Fridge 5', raiting: 6, img: 'https://www.birite.com.au/wp-content/uploads/Teco-TFF210WNTBM-210L-Top-Mount-White-Fridge-Main.jpg'};\r\n    const description = [{}, {}]\r\n    */\r\n    let context = useContext(Context);\r\n    let [device, setDevice] = useState({info: [], img: 'test'});\r\n    const params = useParams();\r\n    console.log(params);\r\n    let isItLiked = context.device.likedDevice.find(el => el.id === params.id);\r\n\r\n    useEffect(() => {\r\n        fetchOneDevice(params.id).then(d => setDevice(d));\r\n    }, []);\r\n\r\n    function likeDevice(rating) {\r\n        context.device.setLikedDevice({id: params.id, rating: rating});\r\n        sendDeviceRating({id: params.id, rating: rating});\r\n    }\r\n\r\n    return (\r\n        <Container className={'mt-3'}>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}>\r\n                    </Image>\r\n                </Col>\r\n                <Col md={4} className=\"d-flex flex-column align-items-center\">\r\n                    <Row style={{height: '100%'}}>\r\n                        <h2>{device.brand?.name + ' ' + device.name}</h2>\r\n                        <div className=\"d-flex align-content-between flex-wrap\">\r\n\r\n                            <StarRatings\r\n                                rating={isItLiked ? isItLiked.rating : device.rating}\r\n                                starRatedColor=\"blue\"\r\n                                numberOfStars={5}\r\n                                changeRating={(rating) => likeDevice(rating)}\r\n                                starHoverColor={'yellow'}\r\n                                name='rating'\r\n                            />\r\n                        </div>\r\n                        \r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                    style={{width: 300, height: 300, fontSize: 32}}>\r\n                        <h3>{device.price + '₴'}</h3>\r\n                        <Button variant=\"outline-dark\" onClick={() => context.user.setGoods(device)}>Add to basket</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Characteristics</th>\r\n                        <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {device.info.map(d => \r\n                            <tr key={d.id}>\r\n                                <td>{d.title}</td>\r\n                                <td>{d.description}</td>\r\n                            </tr>\r\n                        )}\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <Comments deviceId={ params.id }>\r\n                </Comments>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default DevicePage;","import Basket from './pages/Basket';\r\nimport Admin from './pages/Admin';\r\nimport Shop from './pages/Shop';\r\nimport Auth from './pages/Auth';\r\nimport DevicePage from './pages/DevicePage';\r\nimport { ADMIN_ROUTE, BASKET_ROUTE, DEVICE_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE, GALLERY_ROUTE, ABOUTUS_ROUTE } from \"./utils/consts\";\r\n\r\nexport const authRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n    {\r\n        path: BASKET_ROUTE,\r\n        Component: Basket\r\n    },\r\n];\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: SHOP_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: REGISTRATION_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: DEVICE_ROUTE + '/:id',\r\n        Component: DevicePage\r\n    },\r\n    {\r\n        path: GALLERY_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: ABOUTUS_ROUTE,\r\n        Component: Shop\r\n    },\r\n];","import React, {useContext} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport { Context } from '../index';\r\nimport { authRoutes, publicRoutes } from '../routes';\r\nimport { SHOP_ROUTE } from '../utils/consts';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst AppRouter = observer(() => {\r\n    const {user} = useContext(Context);\r\n    \r\n    return (\r\n        <Switch>\r\n            {\r\n                user.isAuth && authRoutes.map(({path, Component}) => {\r\n                    return <Route key={path} path={path} component={Component} exact></Route>\r\n                })\r\n            }\r\n            {\r\n                publicRoutes.map(({path, Component}) => {\r\n                    return <Route key={path} path={path} component={Component} exact></Route>\r\n                })\r\n            }\r\n            <Redirect to={SHOP_ROUTE} />\r\n        </Switch>\r\n    );\r\n});\r\n\r\nexport default AppRouter;","export default __webpack_public_path__ + \"static/media/flower.f3d285c7.svg\";","export default __webpack_public_path__ + \"static/media/home.af5da36e.svg\";","export default __webpack_public_path__ + \"static/media/cart.b320a772.svg\";","import { useContext } from 'react';\r\nimport { Context } from \"../index\";\r\nimport { Navbar, Container, Nav, Button, NavDropdown } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE, ABOUTUS_ROUTE, GALLERY_ROUTE, BASKET_ROUTE } from '../utils/consts';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory } from 'react-router';\r\nimport flower from '../assets/flower.svg';\r\nimport home from '../assets/home.svg';\r\nimport cart from '../assets/cart.svg';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context);\r\n    const history = useHistory();\r\n    console.log(user.user);\r\n\r\n    const logout = () => {\r\n        user.setUser({});\r\n        user.setIsAuth(false);\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" style={{backgroundColor: '#95D2EE'}} collapseOnSelect expand=\"lg\">\r\n            <Container>\r\n                <NavLink to={SHOP_ROUTE} style={{textDecoration: 'none'}} className=\"d-flex align-items-center\">\r\n                    <img src={flower} style={{width: 50, height: 50}} title=\"Flower Shop\"></img>\r\n                    <div style={{paddingLeft: 10, color: '#fff', fontSize: 28, alignItems: 'center'}}>InternetShop</div>\r\n                </NavLink>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" style={{fontSize: 18}}>\r\n                    <Nav className={'ms-3 d-flex justify-content-center'}>\r\n                        <LinkContainer to={SHOP_ROUTE}>\r\n                            <Nav.Link><img src={home} style={{width: 13, height: 13, marginRight: 3}} title=\"Home\"></img>Home</Nav.Link>\r\n                        </LinkContainer>\r\n                       \r\n                        <NavDropdown title=\"Goods\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        \r\n                        <LinkContainer to={BASKET_ROUTE}>\r\n                            <Nav.Link><img src={cart} style={{width: 13, height: 13, marginRight: 3}} title=\"Cart\"></img>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={ABOUTUS_ROUTE}>\r\n                            <Nav.Link>About Us</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                   \r\n                {\r\n                    user.isAuth ? \r\n                    <Nav className=\"ms-auto p-2 bd-highlight\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={logout} style={{margin: 3}}>Log out</Button>\r\n                        { user.user.role === 'ADMIN' ? <Button variant={\"outline-light\"} onClick={() => history.push(ADMIN_ROUTE)} style={{margin: 3}}>Admin dashboard</Button> : undefined}\r\n                    </Nav>\r\n                    :\r\n                    <Nav className=\"ms-auto p-2 bd-highlight\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)} style={{margin: 3}}>Sign in</Button>\r\n                        <Button variant={\"outline-dark\"} onClick={() => history.push(REGISTRATION_ROUTE)} style={{margin: 3}}>Sign up</Button>\r\n                    </Nav>\r\n                }\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n});\r\n\r\nexport default NavBar;","import { useContext } from 'react';\r\nimport { Context } from \"../index\";\r\nimport { Navbar, Container, Nav, Button, NavDropdown } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE, ABOUTUS_ROUTE, GALLERY_ROUTE, BASKET_ROUTE } from '../utils/consts';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory } from 'react-router';\r\nimport flower from '../assets/flower.svg';\r\nimport home from '../assets/home.svg';\r\nimport cart from '../assets/cart.svg';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" style={{backgroundColor: '#95D2EE'}} collapseOnSelect expand=\"lg\">\r\n            <Container>\r\n                <NavLink to={SHOP_ROUTE} style={{textDecoration: 'none'}} className=\"d-flex align-items-center\">\r\n                    <img src={flower} style={{width: 50, height: 50}} title=\"Flower Shop\"></img>\r\n                    <div style={{paddingLeft: 10, color: '#fff', fontSize: 28, alignItems: 'center'}}>InternetShop</div>\r\n                </NavLink>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Created by: <a href=\"#\">Tereshchenko Alex</a>\r\n                </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Launcher} from 'react-chat-window';\r\n \r\nexport default class Chat extends Component {\r\n \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            messageList: [],\r\n            connected: false\r\n        };\r\n        this.socket = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.socket.current = new WebSocket('ws://localhost:5001/');\r\n        this.socket.current.onopen = () => {\r\n            console.log('Socket was opened');\r\n            this.setState({...this.state, connected: true});\r\n            \r\n        }\r\n        this.socket.current.onmessage = (event) => {\r\n            this.setState({...this.state, messageList: [...this.state.messageList, {\r\n                author: 'them',\r\n                type: 'text',\r\n                data: { ...JSON.parse(event.data).data }\r\n                }]})\r\n            console.log(JSON.parse(event.data))\r\n        }\r\n        this.socket.current.onclose = () => {\r\n\r\n        }\r\n        this.socket.current.onerror = () => {\r\n\r\n        }\r\n    }\r\n \r\n    _onMessageWasSent(message) {\r\n        this.setState({...this.state,\r\n            messageList: [...this.state.messageList, message]\r\n        })\r\n        console.log(JSON.stringify(message));\r\n        this.socket.current.send(JSON.stringify(message));\r\n    }\r\n \r\n    _sendMessage(text) {\r\n        if (text.length > 0) {\r\n            this.setState({...this.state,\r\n            messageList: [...this.state.messageList, {\r\n                author: 'them',\r\n                type: 'text',\r\n                data: { text }\r\n            }]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Launcher\r\n            agentProfile={{\r\n                teamName: 'Chat with us',\r\n                imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\r\n            }}\r\n            onMessageWasSent={this._onMessageWasSent.bind(this)}\r\n            messageList={this.state.messageList}\r\n            showEmoji\r\n            />\r\n        </div>)\r\n    }\r\n}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport AppRouter from './components/AppRouter';\r\nimport NavBar from './components/NavBar';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Context } from './index';\r\nimport { check } from './http/userAPI';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Footer from './components/Footer';\r\nimport Chat from './components/Chat';\r\n\r\nfunction App() {\r\n  const { user } = useContext(Context);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    check().then((data) => {\r\n      user.setUser(true);\r\n      user.setIsAuth(true);\r\n    }).finally(() => {\r\n      setLoading(false);\r\n    })\r\n  }, []);\r\n\r\n  if(loading) {\r\n    return <Spinner animation=\"grow\"></Spinner>\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <NavBar></NavBar>\r\n      <AppRouter></AppRouter>\r\n      <Footer></Footer>\r\n      <Chat></Chat>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {makeAutoObservable} from 'mobx';\r\n\r\nexport default class UserStore {\r\n    constructor() {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._goods = [];\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setGoods(device) {\r\n        this._goods.push(device);\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get goods() {\r\n        return this._goods;\r\n    }\r\n}","import {makeAutoObservable} from 'mobx';\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._types = [\r\n            {id: 1, name: 'Fridges'},\r\n            {id: 2, name: 'Smartphones'},\r\n            {id: 3, name: 'Laptops'},\r\n            {id: 4, name: 'Stoves'}\r\n        ];\r\n        this._brands = [\r\n            {id: 1, name: 'Samsung'},\r\n            {id: 2, name: 'Nokia'}\r\n        ];\r\n        this._devices = [\r\n            {id: 5, name: 'Fridge 5', raiting: 6, price: 1200, img: 'https://www.birite.com.au/wp-content/uploads/Teco-TFF210WNTBM-210L-Top-Mount-White-Fridge-Main.jpg'},\r\n            {id: 6, name: 'Fridge 6', raiting: 5, price: 1200, img: 'https://www.birite.com.au/wp-content/uploads/Teco-TFF210WNTBM-210L-Top-Mount-White-Fridge-Main.jpg'}\r\n        ];\r\n        this._selectedType = {};\r\n        this._selectedBrand = {};\r\n        this._page = 1;\r\n        this._totalCount = 0;\r\n        this._limit = 4;\r\n        this._likedDevice = [];\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n\r\n    setBrands(brands) {\r\n        this._brands = brands\r\n    }\r\n\r\n    setDevices(devices) {\r\n        this._devices = devices\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n\r\n    setSelectedBrand(brand) {\r\n        this.setPage(1)\r\n        this._selectedBrand = brand\r\n    }\r\n\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n\r\n    setTotalCount(total) {\r\n        this._totalCount = total\r\n    }\r\n\r\n    setLimit(limit) {\r\n        this._limit = limit\r\n    }\r\n\r\n    setLikedDevice(obj) {\r\n        let arr = this._likedDevice.filter((el) => el.id === obj.id);\r\n        if (arr.length !== 0) {\r\n            arr[0].rating = obj.rating;\r\n        }\r\n        else {\r\n            this._likedDevice.push(obj);\r\n        }\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get selectedBrand() {\r\n        return this._selectedBrand\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get total() {\r\n        return this._totalCount\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n    get likedDevice() {\r\n        return this._likedDevice\r\n    }\r\n}","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UserStore from './store/UserStore';\nimport DeviceStore from './store/DeviceStore';\n\nexport const Context = createContext(null);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context.Provider value={\n      {\n        user: new UserStore(),\n        device: new DeviceStore()\n      }\n    }>\n      <App />\n    </Context.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}