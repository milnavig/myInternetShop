{"version":3,"sources":["utils/consts.js","pages/Basket.js","http/index.js","http/deviceAPI.js","components/modals/CreateBrand.js","components/modals/CreateType.js","components/modals/CreateDevice.js","pages/Admin.js","components/BrandBar.js","components/DeviceItem.js","components/DeviceList.js","components/TypeBar.js","components/Slider.js","components/Pages.js","pages/Shop.js","http/userAPI.js","pages/Auth.js","http/commentAPI.js","components/Comments.js","pages/DevicePage.js","routes.js","components/AppRouter.js","assets/flower.svg","assets/home.svg","assets/cart.svg","components/NavBar.js","components/Footer.js","components/Chat.js","App.js","reportWebVitals.js","store/UserStore.js","store/DeviceStore.js","index.js","css/DevicePage.module.css"],"names":["ADMIN_ROUTE","LOGIN_ROUTE","REGISTRATION_ROUTE","SHOP_ROUTE","BASKET_ROUTE","ABOUTUS_ROUTE","Basket","observer","user","useContext","Context","history","useHistory","Container","className","goods","map","el","Card","style","width","cursor","onClick","push","process","id","Image","height","src","img","Body","Title","brand","name","Text","Footer","rating","starRatedColor","numberOfStars","starHoverColor","starDimension","starSpacing","$host","axios","create","withCredentials","baseURL","$authHost","interceptors","request","use","config","headers","authorization","localStorage","getItem","response","error","a","status","_isRetry","originalRequest","get","data","setItem","access_token","createType","type","post","fetchTypes","createBrand","fetchBrands","createDevice","device","fetchDevices","typeId","brandId","page","limit","params","fetchOneDevice","sendDeviceRating","obj","CreateBrand","show","onHide","useState","value","setValue","Modal","size","centered","Header","closeButton","Form","Control","onChange","e","target","placeholder","Button","variant","then","CreateType","CreateDevice","setName","price","setPrice","file","setFile","info","setInfo","useEffect","t","setTypes","setBrands","changeInfo","key","number","i","Dropdown","Toggle","selectedType","Menu","types","Item","setSelectedType","selectedBrand","brands","setSelectedBrand","Number","console","log","files","title","description","Date","now","Row","Col","md","filter","formData","FormData","append","String","JSON","stringify","res","Admin","brandVisible","setBrandVisible","typeVisible","setTypeVisible","deviceVisible","setDeviceVisible","BrandBar","ListGroup","horizontal","active","DeviceItem","DeviceList","devices","d","TypeBar","Slider","Carousel","minHeight","nextLabel","prevLabel","devicesForSlider","alt","Caption","Pages","pagesCount","Math","ceil","total","pages","Pagination","setPage","activeLabel","Shop","setDevices","rows","setTotalCount","count","setDevicesForSlider","registration","email","password","username","role","jwt_decode","login","check","logout","Auth","isLogin","useLocation","pathname","split","setEmail","setPassword","setUsername","click","setUser","setIsAuth","alert","message","window","innerHeight","display","to","sendComment","comment","fetchComments","deviceId","Comments","props","comments","setComments","userComment","setUserComment","c","isAuth","Group","controlId","Label","as","text","Alert","textDecoration","Subtitle","timestamp","replace","toLocaleString","DevicePage","context","setDevice","useParams","isItLiked","likedDevice","find","scrollTo","displayColumn","changeRating","setLikedDevice","likeDevice","fontSize","setGoods","Table","striped","bordered","hover","authRoutes","path","Component","publicRoutes","DEVICE_ROUTE","AppRouter","component","exact","NavBar","logout_action","removeItem","Navbar","backgroundColor","collapseOnSelect","expand","flower","paddingLeft","color","alignItems","Collapse","Nav","Link","home","marginRight","NavDropdown","href","Divider","cart","margin","undefined","Chat","state","messageList","connected","socket","React","createRef","this","connect","current","WebSocket","onopen","setState","onmessage","event","author","parse","onclose","onerror","send","length","agentProfile","teamName","imageUrl","onMessageWasSent","_onMessageWasSent","bind","showEmoji","loading","setLoading","finally","Spinner","animation","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UserStore","_isAuth","_user","_goods","makeAutoObservable","bool","DeviceStore","_types","_brands","_devices","_devicesForSlider","_selectedType","_selectedBrand","_page","_totalCount","_limit","_likedDevice","arr","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.dd0bb71f.chunk.js","sourcesContent":["export const ADMIN_ROUTE = '/admin';\r\nexport const LOGIN_ROUTE = '/login';\r\nexport const REGISTRATION_ROUTE = '/registration';\r\nexport const SHOP_ROUTE = '/';\r\nexport const BASKET_ROUTE = '/basket';\r\nexport const DEVICE_ROUTE = '/device';\r\nexport const ABOUTUS_ROUTE = '/about';\r\nexport const GALLERY_ROUTE = '/gallery';","import { observer } from 'mobx-react-lite';\r\nimport { useContext } from 'react';\r\nimport { Context } from '../index';\r\nimport StarRatings from 'react-star-ratings';\r\nimport { Card, Container, Image } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DEVICE_ROUTE } from '../utils/consts';\r\n\r\nconst Basket = observer(() => {\r\n    const { user } = useContext(Context);\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <Container>\r\n            <h2 className=\"mt-4\">My basket: </h2>\r\n            { user.goods.map(el => \r\n            <Card style={{width: '250px', cursor: 'pointer'}} className=\"mt-4 mb-4\" onClick={() => history.push(process.env.PUBLIC_URL + DEVICE_ROUTE + '/' + el.id)}>\r\n                <Image width={'100%'} height={'auto'} src={process.env.REACT_APP_API_URL + el.img}>\r\n                    </Image>\r\n                <Card.Body>\r\n                <Card.Title>{el.brand?.name}</Card.Title>\r\n                <Card.Text>\r\n                    {el.name}\r\n                </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                \r\n                    <StarRatings\r\n                        rating={el.rating}\r\n                        starRatedColor=\"blue\"\r\n                        numberOfStars={5}\r\n                        starHoverColor={'yellow'}\r\n                        name='rating'\r\n                        starDimension='20px'\r\n                        starSpacing='4px'\r\n                    />\r\n                </Card.Footer>\r\n            </Card>\r\n            )}\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Basket;","import axios from 'axios';\r\n\r\nconst $host = axios.create({\r\n    withCredentials: true,\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nconst $authHost = axios.create({\r\n    withCredentials: true,\r\n    baseURL: process.env.REACT_APP_API_URL\r\n});\r\n\r\nconst authInterceptor = config => {\r\n    config.headers.authorization = `Bearer ${localStorage.getItem('token')}`;\r\n    return config;\r\n}\r\n\r\n$authHost.interceptors.request.use(authInterceptor);\r\n\r\n$authHost.interceptors.response.use((config) => { return config; }, async (error) => {\r\n    if (error.response?.status === 401 && error.config && !error.config._isRetry) {\r\n        const originalRequest = error.config;\r\n        originalRequest._isRetry = true;\r\n        const { data } = await axios.get('api/user/refresh', {\r\n            withCredentials: true,\r\n            baseURL: process.env.REACT_APP_API_URL\r\n        });\r\n        localStorage.setItem('token', data.access_token);\r\n        return $authHost.request(originalRequest);\r\n    }\r\n    throw error;\r\n});\r\n\r\nexport {$host, $authHost}","import {$host, $authHost} from './index';\r\n\r\nexport const createType = async (type) => {\r\n    const { data } = await $authHost.post('api/type', type);\r\n    return data;\r\n}\r\n\r\nexport const fetchTypes = async () => {\r\n    const { data } = await $host.get('api/type');\r\n    return data;\r\n}\r\n\r\nexport const createBrand = async (brand) => {\r\n    const { data } = await $authHost.post('api/brand', brand);\r\n    return data;\r\n}\r\n\r\nexport const fetchBrands = async () => {\r\n    const { data } = await $host.get('api/brand');\r\n    return data;\r\n}\r\n\r\nexport const createDevice = async (device) => {\r\n    const { data } = await $authHost.post('api/device', device);\r\n    return data;\r\n}\r\n\r\nexport const fetchDevices = async (typeId, brandId, page, limit=5) => {\r\n    const { data } = await $host.get('api/device', {params: {typeId, brandId, page, limit}});\r\n    return data;\r\n}\r\n\r\nexport const fetchOneDevice = async (id) => {\r\n    const { data } = await $host.get('api/device/' + id);\r\n    return data;\r\n}\r\n\r\nexport const sendDeviceRating = async (obj) => {\r\n    const { data } = await $host.post('api/device/action/like', obj);\r\n    return data;\r\n}","import { useState } from 'react';\r\nimport { Modal, Button, Form } from 'react-bootstrap';\r\nimport { createBrand } from '../../http/deviceAPI';\r\n\r\nexport const CreateBrand = ({show, onHide}) => {\r\n    let [value, setValue] = useState('');\r\n    const addBrand = () => {\r\n        createBrand({name: value}).then(data => {\r\n            setValue('');\r\n            onHide();\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a new type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Add the name of the new type\"></Form.Control>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={onHide}>Close</Button>\r\n                <Button variant={\"outline-success\"} onClick={addBrand}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import { useState } from 'react';\r\nimport { Modal, Form, Button } from 'react-bootstrap';\r\nimport { createType } from '../../http/deviceAPI';\r\n\r\nexport const CreateType = ({show, onHide}) => {\r\n    let [value, setValue] = useState('');\r\n    const addType = () => {\r\n        createType({name: value}).then(data => {\r\n            setValue('');\r\n            onHide();\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a new type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control value={value} onChange={(e) => setValue(e.target.value)} placeholder=\"Add the name of the new type\"></Form.Control>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={onHide}>Close</Button>\r\n                <Button variant={\"outline-success\"} onClick={addType}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n}","import { useContext, useEffect, useState } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Modal, Form, Button, Dropdown, Row, Col } from 'react-bootstrap';\r\nimport { Context } from '../../index';\r\nimport { createDevice, fetchBrands, fetchTypes } from '../../http/deviceAPI';\r\n\r\nexport const CreateDevice = observer(({show, onHide}) => {\r\n    const {device} = useContext(Context);\r\n    let [name, setName] = useState('');\r\n    let [price, setPrice] = useState(0);\r\n    let [file, setFile] = useState(null);\r\n    let [info, setInfo] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then((t) => device.setTypes(t));\r\n        fetchBrands().then((t) => device.setBrands(t));\r\n    }, [])\r\n\r\n    const addInfo = () => {\r\n        setInfo([...info, {title: '', description: '', number: Date.now()}]);\r\n    }\r\n\r\n    const removeInfo = (number) => {\r\n        setInfo(info.filter(i => i.number !== number));\r\n    }\r\n\r\n    const changeInfo = (key, value, number) => {\r\n        setInfo(info.map(i => i.number === number ? {...i, [key]: value} : i));\r\n    }\r\n\r\n    const selectFile = e => {\r\n        console.log(e.target.files);\r\n        setFile(e.target.files[0]);\r\n    }\r\n\r\n    const addDevice = () => {\r\n        const formData = new FormData();\r\n        formData.append('name', name);\r\n        formData.append('price', String(price));\r\n        formData.append('img', file);\r\n        formData.append('brandId', device.selectedBrand.id);\r\n        formData.append('typeId', device.selectedType.id);\r\n        formData.append('info', JSON.stringify(info));\r\n        createDevice(formData).then(res => onHide());\r\n    }\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            size=\"lg\"\r\n            aria-labelledby=\"contained-modal-title-vcenter\"\r\n            centered\r\n            >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                Add a new type\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>\r\n                            {device.selectedType.name || 'Select type'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.types.map(type => \r\n                            <Dropdown.Item key={type.id} onClick={() => device.setSelectedType(type)}>\r\n                                {type.name}\r\n                            </Dropdown.Item>)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>\r\n                            {device.selectedBrand.name || 'Select brand'}\r\n                        </Dropdown.Toggle>\r\n                        <Dropdown.Menu>\r\n                            {device.brands.map(brand => \r\n                            <Dropdown.Item key={brand.id} onClick={() => device.setSelectedBrand(brand)}>\r\n                                {brand.name}\r\n                            </Dropdown.Item>)}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                    <Form.Control placeholder=\"Enter the name of device\" className=\"mt-3\" value={name} onChange={e => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                    <Form.Control placeholder=\"Enter the price of device\" type='number' className=\"mt-3\" value={price} onChange={e => setPrice(Number(e.target.value))}>\r\n                    </Form.Control>\r\n                    <Form.Control type='file' className=\"mt-3\" onChange={selectFile}>\r\n                    </Form.Control>\r\n                    <hr />\r\n                    <Button onClick={addInfo}>Add a new property</Button>\r\n                    {info.map(i => \r\n                        <Row className=\"mt-2\" key={i.number}>\r\n                            <Col md={4}>\r\n                                <Form.Control placeholder=\"Enter a name of the property\" value={i.title}\r\n                                onChange={(e) => changeInfo('title', e.target.value, i.number)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Form.Control placeholder=\"Enter a description of the property\" value={i.description} \r\n                                onChange={(e) => changeInfo('description', e.target.value, i.number)}>\r\n                                </Form.Control>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <Button variant=\"outline-danger\" onClick={() => removeInfo(i.number)}>\r\n                                    Delete\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        )}\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant={\"outline-danger\"} onClick={onHide}>Close</Button>\r\n                <Button variant={\"outline-success\"} onClick={addDevice}>Add</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});","import { Button, Container } from \"react-bootstrap\";\r\nimport { CreateBrand } from \"../components/modals/CreateBrand\";\r\nimport { CreateType } from \"../components/modals/CreateType\";\r\nimport { CreateDevice } from \"../components/modals/CreateDevice\";\r\nimport { useState } from \"react\";\r\n\r\nconst Admin = () => {\r\n    let [brandVisible, setBrandVisible] = useState(false);\r\n    let [typeVisible, setTypeVisible] = useState(false);\r\n    let [deviceVisible, setDeviceVisible] = useState(false);\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column mt-4 mb-4\">\r\n            <Button variant={'outline-dark'} onClick={() => setTypeVisible(true)} className=\"mt-2\">\r\n                Add type\r\n            </Button>\r\n            <Button variant={'outline-dark'} onClick={() => setBrandVisible(true)} className=\"mt-2\">\r\n                Add brand\r\n            </Button>\r\n            <Button variant={'outline-dark'} onClick={() => setDeviceVisible(true)} className=\"mt-2\">\r\n                Add device\r\n            </Button>\r\n            <CreateBrand show={brandVisible} onHide={() => setBrandVisible(false)}></CreateBrand>\r\n            <CreateType show={typeVisible} onHide={() => setTypeVisible(false)}></CreateType>\r\n            <CreateDevice show={deviceVisible} onHide={() => setDeviceVisible(false)}></CreateDevice>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Admin;","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport const BrandBar = observer(() => {\r\n    const {device} = useContext(Context);\r\n    return (\r\n        <ListGroup horizontal>\r\n            {device.brands.map(brand =>\r\n                <ListGroup.Item key={brand.id} onClick={() => device.selectedBrand.id === brand.id ? device.setSelectedBrand({}) : device.setSelectedBrand(brand)}\r\n                active={device.selectedBrand.id === brand.id} className={\"barItem\"}\r\n                >{brand.name}</ListGroup.Item>\r\n            )}\r\n        </ListGroup>\r\n    );\r\n});","import { observer } from \"mobx-react-lite\";\r\nimport { Card, Col, Image } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { DEVICE_ROUTE } from '../utils/consts';\r\nimport StarRatings from 'react-star-ratings';\r\n\r\nexport const DeviceItem = observer(({device}) => {\r\n    const history = useHistory();\r\n    return (\r\n        <Col md={3} className=\"mt-3\" className=\"d-flex \">\r\n            \r\n            <Card style={{width: '300px', cursor: 'pointer'}} className=\"mt-4 mb-4\" onClick={() => history.push(process.env.PUBLIC_URL + DEVICE_ROUTE + '/' + device.id)}>\r\n                <Image width={'100%'} height={'180px'} src={process.env.REACT_APP_API_URL + device.img}>\r\n                </Image>\r\n                <Card.Body>\r\n                <Card.Title>{device.brand?.name}</Card.Title>\r\n                <Card.Text>\r\n                    {device.name}\r\n                </Card.Text>\r\n                </Card.Body>\r\n                <Card.Footer>\r\n                \r\n                    <StarRatings\r\n                        rating={device.rating}\r\n                        starRatedColor=\"blue\"\r\n                        numberOfStars={5}\r\n                        starHoverColor={'yellow'}\r\n                        name='rating'\r\n                        starDimension='20px'\r\n                        starSpacing='4px'\r\n                    />\r\n                </Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    );\r\n});","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { Row } from 'react-bootstrap';\r\nimport { DeviceItem } from './DeviceItem';\r\n\r\nexport const DeviceList = observer(() => {\r\n    const {device} = useContext(Context);\r\n    return (\r\n        <Row className=\"d-flex\">\r\n            {device.devices.map(d =>\r\n                <DeviceItem key={d.id} device={d}></DeviceItem>\r\n            )}\r\n        </Row>\r\n    );\r\n});","import { useContext } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { ListGroup } from 'react-bootstrap';\r\n\r\nexport const TypeBar = observer(() => {\r\n    const {device} = useContext(Context);\r\n    return (\r\n        <ListGroup className=\"mb-4\">\r\n            {device.types.map((type) => <ListGroup.Item key={type.id}\r\n            style={{cursor: 'pointer'}}\r\n            active={type.id === device.selectedType.id}\r\n            onClick={() => device.selectedType.id === type.id ? device.setSelectedType({}) : device.setSelectedType(type)} className={\"barItem\"}\r\n            >{type.name}</ListGroup.Item>)}\r\n        </ListGroup>\r\n    );\r\n});","import { Carousel } from \"react-bootstrap\";\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from \"../index\";\r\nimport { useContext } from \"react\";\r\n\r\nexport const Slider = observer(() => {\r\n    const {device} = useContext(Context);\r\n    //console.log({...device.devices[0]?.brand}?.name);\r\n\r\n    return (\r\n        <Carousel className=\"carousel-dark\" style={{height: '450px', minHeight: 300}} nextLabel=\"\" prevLabel=\"\" >\r\n            {device.devicesForSlider.map(i =>\r\n                <Carousel.Item style={{height:'450px', minHeight:300}} key={i.id}>\r\n                    <img\r\n                        className=\"d-block w-100 img\"\r\n                        src={process.env.REACT_APP_API_URL + i.img}\r\n                        alt={i.name}\r\n                    />\r\n                    <Carousel.Caption>\r\n                        <h3>{i.brand?.name + ' ' + i.name}</h3>\r\n                        <p>{\"description\"}</p>\r\n                    </Carousel.Caption>\r\n                </Carousel.Item>\r\n            )}\r\n        </Carousel>\r\n    );\r\n});\r\n\r\n","import { useContext } from 'react';\r\nimport { Context } from \"../index\";\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst Pages = observer(() => {\r\n    const {device} = useContext(Context);\r\n    const pagesCount = Math.ceil(device.total / device.limit);\r\n    const pages = [];\r\n\r\n    for (let i = 0; i < pagesCount; i++) {\r\n        pages.push(i + 1);\r\n    }\r\n\r\n    return (\r\n        <Pagination className=\"m-t-5 mt-2\">\r\n            {pages.map(page => {\r\n                return <Pagination.Item\r\n                key={page}\r\n                active={device.page === page}\r\n                onClick={() => device.setPage(page)}\r\n                activeLabel=\"\">\r\n                    {page}\r\n                </Pagination.Item>\r\n            })}\r\n        </Pagination>\r\n    );\r\n});\r\n\r\nexport default Pages;","import { observer } from \"mobx-react-lite\";\r\nimport { useContext, useEffect } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { Context } from \"../index\";\r\nimport { BrandBar } from \"../components/BrandBar\";\r\nimport { DeviceList } from \"../components/DeviceList\";\r\nimport { TypeBar } from \"../components/TypeBar\";\r\nimport { Slider } from \"../components/Slider\";\r\nimport { fetchTypes, fetchBrands, fetchDevices } from \"../http/deviceAPI\";\r\nimport Pages from \"../components/Pages\";\r\n\r\nconst Shop = observer(() => {\r\n    let {device} = useContext(Context);\r\n\r\n    useEffect(() => {\r\n        fetchTypes().then((t) => device.setTypes(t));\r\n        fetchBrands().then((t) => device.setBrands(t));\r\n        fetchDevices(null, null, 1, 8).then((t) => {\r\n            device.setDevices(t.rows);\r\n            device.setTotalCount(t.count);\r\n\r\n            device.setDevicesForSlider(t.rows);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchDevices(device.selectedType.id, device.selectedBrand.id, device.page, 8).then((t) => {\r\n            console.log(t.count);\r\n            device.setDevices(t.rows);\r\n            device.setTotalCount(t.count);\r\n            console.log(device.total);\r\n        });\r\n        console.log({...device.selectedBrand}.id);\r\n        console.log({...device.selectedType});\r\n\r\n        //console.log(device.page);\r\n        //console.log(device.total);\r\n        //console.log(device.limit);\r\n    }, [device.page, device.selectedType, device.selectedBrand]);\r\n\r\n    return (\r\n        <Container>\r\n            <Row className=\"d-flex align-items-center justify-content-center mt-3\">\r\n                <Col md={8}>\r\n                    <Slider></Slider>\r\n                </Col>\r\n            </Row>            \r\n            <Row className=\"mt-3\">\r\n                <Col md={3}>\r\n                    <TypeBar></TypeBar>\r\n                </Col>\r\n                <Col md={9}>\r\n                    <BrandBar />\r\n                    <DeviceList></DeviceList>\r\n                    <Pages></Pages>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Shop;","import {$host, $authHost} from './index';\r\nimport jwt_decode from 'jwt-decode';\r\n\r\nexport const registration = async (email, password, username) => {\r\n    const { data } = await $host.post('api/user/registration', {email, password, username, role: 'USER'});\r\n    localStorage.setItem('token', data.access_token);\r\n    return jwt_decode(data.access_token);\r\n}\r\n\r\nexport const login = async (email, password) => {\r\n    const { data } = await $host.post('api/user/login', {email, password});\r\n    localStorage.setItem('token', data.access_token);\r\n    console.log(data.access_token);\r\n    return jwt_decode(data.access_token);\r\n}\r\n\r\n// version without refresh token\r\n/*\r\nexport const check = async () => {\r\n    const { data } = await $authHost.get('api/user/auth');\r\n    localStorage.setItem('token', data.access_token);\r\n    return jwt_decode(data.access_token);\r\n}\r\n*/\r\n\r\n// version with refresh token\r\nexport const check = async () => {\r\n    const { data } = await $authHost.get('api/user/refresh');\r\n    localStorage.setItem('token', data.access_token);\r\n    return jwt_decode(data.access_token);\r\n}\r\n\r\nexport const logout = async () => {\r\n    await $authHost.post('api/user/logout');\r\n}","import { useState, useContext } from 'react';\r\nimport { Button, Card, Container, Form, Row } from 'react-bootstrap';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\nimport { registration, login } from '../http/userAPI';\r\nimport { LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE } from '../utils/consts';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Auth = observer(() => {\r\n    let { user } = useContext(Context);\r\n    const location = useLocation();\r\n    const isLogin = ('/' + location.pathname.split('/')[2]) === LOGIN_ROUTE;\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const history = useHistory();\r\n\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if (isLogin) {\r\n                data = await login(email, password);\r\n            }\r\n            else {\r\n                data = await registration(email, password, username);\r\n                console.log(data);\r\n            }\r\n            \r\n            user.setUser(data);\r\n            user.setIsAuth(true);\r\n            history.push(SHOP_ROUTE);\r\n        } catch(e) {\r\n            alert(e.response.data.message);\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\"\r\n        style={{height: window.innerHeight - 54}}>\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{ isLogin ? 'Authorization' : 'Registration' }</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    { isLogin || \r\n                    <Form.Control className=\"mt-4\"\r\n                    placeholder=\"Enter your username\" value={username} onChange={(e) => setUsername(e.target.value)}>\r\n                    </Form.Control>\r\n                    }\r\n                    <Form.Control className=\"mt-4\"\r\n                    placeholder=\"Enter your email\" value={email} onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                    <Form.Control className=\"mt-4\"\r\n                    placeholder=\"Enter your password\" value={password} onChange={(e) => setPassword(e.target.value)} type=\"password\">\r\n                    </Form.Control>\r\n\r\n                    <Row className=\"d-flex justify-content-between mt-4\">\r\n                        { isLogin ? \r\n                        <div style={{display: 'inline'}}>\r\n                            Not registered yet? <NavLink to={process.env.PUBLIC_URL + REGISTRATION_ROUTE} >Register!</NavLink>\r\n                        </div>\r\n                        :\r\n                        <div style={{display: 'inline'}}>\r\n                            Have your own account? <NavLink to={process.env.PUBLIC_URL + LOGIN_ROUTE} >Login!</NavLink>\r\n                        </div>\r\n                        }\r\n                        <Button variant=\"outline-success\" className=\"mt-2\" onClick={isLogin ? click : click}>{isLogin ? 'Enter' : 'Register'}</Button>\r\n                    </Row>\r\n                    \r\n                </Form>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;","import {$host, $authHost} from './index';\r\n\r\nexport const sendComment = async (comment) => {\r\n    const { data } = await $authHost.post('api/device/action/comment', comment);\r\n    return data;\r\n}\r\n\r\nexport const fetchComments = async (deviceId) => {\r\n    const { data } = await $host.get('api/device/action/comment/' + deviceId);\r\n    return data;\r\n}\r\n","import { useContext, useState, useEffect } from 'react';\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Context } from \"../index\";\r\nimport { Card, Form, Button, Alert } from 'react-bootstrap';\r\nimport { fetchComments, sendComment } from '../http/commentAPI';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { LOGIN_ROUTE } from '../utils/consts';\r\n\r\nexport const Comments = observer((props) => {\r\n    const {device, user} = useContext(Context);\r\n    let [ comments, setComments ] = useState([]);\r\n    let [ userComment, setUserComment ] = useState('');\r\n\r\n    useEffect(() => {\r\n        fetchComments(props.deviceId).then(c => setComments(c));\r\n        console.log(comments);\r\n    }, []);\r\n\r\n    function toComment() {\r\n        console.log({text: userComment, deviceId: props.deviceId})\r\n        sendComment({text: userComment, deviceId: props.deviceId});\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h2>Comments</h2>\r\n            { user.isAuth ?\r\n            <>\r\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                    <Form.Label>Type your comment:</Form.Label>\r\n                    <Form.Control as=\"textarea\" rows={3} placeholder=\"Your comment...\" onChange={(e) => setUserComment(e.target.value)} />\r\n                </Form.Group>\r\n                <Button variant=\"primary\" size=\"sm\" onClick={toComment}>\r\n                    Send\r\n                </Button>\r\n            </>\r\n            :\r\n            <Alert variant='primary'>\r\n                You need to login or register to comment this device. {' '}\r\n                <NavLink to={process.env.PUBLIC_URL + LOGIN_ROUTE} style={{textDecoration: 'none'}}>\r\n                    Login\r\n                </NavLink>\r\n            </Alert>\r\n            }\r\n            \r\n            {comments.map((e, i) => \r\n            <Card key={i} className=\"mt-2\">\r\n                <Card.Body>\r\n                    <Card.Title>{'Author: ' + e.user.username}</Card.Title>\r\n                    <Card.Text>\r\n                    {e.text}\r\n                    </Card.Text>\r\n                    <Card.Subtitle className=\"mb-2 text-muted\">{(new Date(e.timestamp.replace(' ', 'T'))).toLocaleString()}</Card.Subtitle>\r\n                </Card.Body>\r\n            </Card>\r\n            )}\r\n            \r\n        </div>\r\n    );\r\n});","import { useContext, useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Container, Image, Row, Table } from \"react-bootstrap\";\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchOneDevice, sendDeviceRating } from \"../http/deviceAPI\";\r\nimport StarRatings from 'react-star-ratings';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '../index';\r\nimport { Comments } from '../components/Comments';\r\nimport style from '../css/DevicePage.module.css';\r\n\r\nconst DevicePage = observer(() => {\r\n    /*\r\n    const device = {id: 5, name: 'Fridge 5', raiting: 6, img: 'https://www.birite.com.au/wp-content/uploads/Teco-TFF210WNTBM-210L-Top-Mount-White-Fridge-Main.jpg'};\r\n    const description = [{}, {}]\r\n    */\r\n    let context = useContext(Context);\r\n    let [device, setDevice] = useState({info: [], img: ''});\r\n    const params = useParams();\r\n    console.log(params);\r\n    let isItLiked = context.device.likedDevice.find(el => el.id === params.id);\r\n\r\n    useEffect(() => {\r\n        fetchOneDevice(params.id).then(d => setDevice(d));\r\n        window.scrollTo(0, 0);\r\n    }, []);\r\n\r\n    function likeDevice(rating) {\r\n        context.device.setLikedDevice({id: params.id, rating: rating});\r\n        sendDeviceRating({id: params.id, rating: rating});\r\n    }\r\n\r\n    return (\r\n        <Container className={'mt-3'}>\r\n            <Row className={style.displayColumn}>\r\n                <Col md={4}>\r\n                    <Image width={300} height={300} src={process.env.REACT_APP_API_URL + device.img}>\r\n                    </Image>\r\n                </Col>\r\n                <Col md={4} className=\"d-flex flex-column align-items-center\">\r\n                    <Row style={{height: '100%'}}>\r\n                        <h2>{device.brand?.name + ' ' + device.name}</h2>\r\n                        <div className=\"d-flex align-content-between flex-wrap\">\r\n\r\n                            <StarRatings\r\n                                rating={isItLiked ? isItLiked.rating : device.rating}\r\n                                starRatedColor=\"blue\"\r\n                                numberOfStars={5}\r\n                                changeRating={(rating) => likeDevice(rating)}\r\n                                starHoverColor={'yellow'}\r\n                                name='rating'\r\n                            />\r\n                        </div>\r\n                        \r\n                    </Row>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card className=\"d-flex flex-column align-items-center justify-content-around\"\r\n                    style={{width: 300, height: 300, fontSize: 32}}>\r\n                        <h3>{device.price + '₴'}</h3>\r\n                        <Button variant=\"outline-dark\" onClick={() => context.user.setGoods(device)}>Add to basket</Button>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <Table striped bordered hover>\r\n                    <thead>\r\n                        <tr>\r\n                        <th>Characteristics</th>\r\n                        <th>Description</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {device.info.map(d => \r\n                            <tr key={d.id}>\r\n                                <td>{d.title}</td>\r\n                                <td>{d.description}</td>\r\n                            </tr>\r\n                        )}\r\n                        \r\n                    </tbody>\r\n                </Table>\r\n            </Row>\r\n            <Row className=\"d-flex flex-column m-3\">\r\n                <Comments deviceId={ params.id }>\r\n                </Comments>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default DevicePage;","import Basket from './pages/Basket';\r\nimport Admin from './pages/Admin';\r\nimport Shop from './pages/Shop';\r\nimport Auth from './pages/Auth';\r\nimport DevicePage from './pages/DevicePage';\r\nimport { ADMIN_ROUTE, BASKET_ROUTE, DEVICE_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE, GALLERY_ROUTE, ABOUTUS_ROUTE } from \"./utils/consts\";\r\n\r\nexport const authRoutes = [\r\n    {\r\n        path: ADMIN_ROUTE,\r\n        Component: Admin\r\n    },\r\n    {\r\n        path: BASKET_ROUTE,\r\n        Component: Basket\r\n    },\r\n];\r\n\r\nexport const publicRoutes = [\r\n    {\r\n        path: SHOP_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: LOGIN_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: REGISTRATION_ROUTE,\r\n        Component: Auth\r\n    },\r\n    {\r\n        path: DEVICE_ROUTE + '/:id',\r\n        Component: DevicePage\r\n    },\r\n    {\r\n        path: GALLERY_ROUTE,\r\n        Component: Shop\r\n    },\r\n    {\r\n        path: ABOUTUS_ROUTE,\r\n        Component: Shop\r\n    },\r\n];","import React, {useContext} from 'react';\r\nimport {Switch, Route, Redirect} from 'react-router-dom';\r\nimport { Context } from '../index';\r\nimport { authRoutes, publicRoutes } from '../routes';\r\nimport { SHOP_ROUTE } from '../utils/consts';\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst AppRouter = observer(() => {\r\n    const {user} = useContext(Context);\r\n    \r\n    return (\r\n        <Switch>\r\n            {\r\n                user.isAuth && authRoutes.map(({path, Component}) => {\r\n                    return <Route key={path} path={process.env.PUBLIC_URL + path} component={Component} exact></Route>\r\n                })\r\n            }\r\n            {\r\n                publicRoutes.map(({path, Component}) => {\r\n                    return <Route key={path} path={process.env.PUBLIC_URL + path} component={Component} exact></Route>\r\n                })\r\n            }\r\n            <Redirect to={process.env.PUBLIC_URL + SHOP_ROUTE} />\r\n        </Switch>\r\n    );\r\n});\r\n\r\nexport default AppRouter;","export default __webpack_public_path__ + \"static/media/flower.f3d285c7.svg\";","export default __webpack_public_path__ + \"static/media/home.af5da36e.svg\";","export default __webpack_public_path__ + \"static/media/cart.b320a772.svg\";","import { useContext } from 'react';\r\nimport { Context } from \"../index\";\r\nimport { Navbar, Container, Nav, Button, NavDropdown } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ADMIN_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE, SHOP_ROUTE, ABOUTUS_ROUTE, BASKET_ROUTE } from '../utils/consts';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useHistory } from 'react-router';\r\nimport flower from '../assets/flower.svg';\r\nimport home from '../assets/home.svg';\r\nimport cart from '../assets/cart.svg';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { logout } from '../http/userAPI';\r\n\r\nconst NavBar = observer(() => {\r\n    const {user} = useContext(Context);\r\n    const history = useHistory();\r\n    console.log(user.user);\r\n\r\n    const logout_action = async () => {\r\n        await logout();\r\n        user.setUser({});\r\n        user.setIsAuth(false);\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" style={{backgroundColor: process.env.REACT_APP_COLOR_3}} collapseOnSelect expand=\"lg\">\r\n            <Container>\r\n                <NavLink to={process.env.PUBLIC_URL + SHOP_ROUTE} style={{textDecoration: 'none'}} className=\"d-flex align-items-center\">\r\n                    <img src={flower} style={{width: 50, height: 50}} title=\"Internet Shop\"></img>\r\n                    <div style={{paddingLeft: 10, color: '#fff', fontSize: 28, alignItems: 'center'}}>InternetShop</div>\r\n                </NavLink>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\" style={{fontSize: 18}}>\r\n                    <Nav className={'ms-3 d-flex justify-content-center'}>\r\n                        <LinkContainer to={process.env.PUBLIC_URL + SHOP_ROUTE}>\r\n                            <Nav.Link><img src={home} style={{width: 13, height: 13, marginRight: 3}} title=\"Home\"></img>Home</Nav.Link>\r\n                        </LinkContainer>\r\n                       \r\n                        <NavDropdown title=\"Goods\" id=\"basic-nav-dropdown\">\r\n                            <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\r\n                            <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                        \r\n                        <LinkContainer to={process.env.PUBLIC_URL + BASKET_ROUTE}>\r\n                            <Nav.Link><img src={cart} style={{width: 13, height: 13, marginRight: 3}} title=\"Cart\"></img>Cart</Nav.Link>\r\n                        </LinkContainer>\r\n                        <LinkContainer to={process.env.PUBLIC_URL + ABOUTUS_ROUTE}>\r\n                            <Nav.Link>About Us</Nav.Link>\r\n                        </LinkContainer>\r\n                    </Nav>\r\n                   \r\n                {\r\n                    user.isAuth ? \r\n                    <Nav className=\"ms-auto p-2 bd-highlight\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={logout_action} style={{margin: 3}}>Log out</Button>\r\n                        { user.user.role === 'ADMIN' ? <Button variant={\"outline-light\"} onClick={() => history.push(ADMIN_ROUTE)} style={{margin: 3}}>Admin dashboard</Button> : undefined}\r\n                    </Nav>\r\n                    :\r\n                    <Nav className=\"ms-auto p-2 bd-highlight\" style={{color: 'white'}}>\r\n                        <Button variant={\"outline-light\"} onClick={() => history.push(process.env.PUBLIC_URL + LOGIN_ROUTE)} style={{margin: 3}}>Sign in</Button>\r\n                        <Button variant={\"outline-dark\"} onClick={() => history.push(process.env.PUBLIC_URL + REGISTRATION_ROUTE)} style={{margin: 3}}>Sign up</Button>\r\n                    </Nav>\r\n                }\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n});\r\n\r\nexport default NavBar;","import { Navbar, Container } from 'react-bootstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { SHOP_ROUTE } from '../utils/consts';\r\nimport flower from '../assets/flower.svg';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n        <Navbar variant=\"dark\" style={{backgroundColor: process.env.REACT_APP_COLOR_3}} collapseOnSelect expand=\"lg\">\r\n            <Container>\r\n                <NavLink to={process.env.PUBLIC_URL + SHOP_ROUTE} style={{textDecoration: 'none'}} className=\"d-flex align-items-center\">\r\n                    <img src={flower} style={{width: 50, height: 50}} title=\"Flower Shop\"></img>\r\n                    <div style={{paddingLeft: 10, color: '#fff', fontSize: 28, alignItems: 'center'}}>InternetShop</div>\r\n                </NavLink>\r\n                <Navbar.Toggle />\r\n                <Navbar.Collapse className=\"justify-content-end\">\r\n                <Navbar.Text>\r\n                    Created by: <a href=\"#\">Tereshchenko Alex</a>\r\n                </Navbar.Text>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport {Launcher} from 'react-chat-window';\r\n \r\nexport default class Chat extends Component {\r\n \r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            messageList: [],\r\n            connected: false\r\n        };\r\n        this.socket = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.connect();\r\n    }\r\n\r\n    connect() {\r\n        this.socket.current = new WebSocket('ws://localhost:5001/');\r\n        this.socket.current.onopen = () => {\r\n            console.log('Socket was opened');\r\n            this.setState({...this.state, connected: true});\r\n            \r\n        }\r\n        this.socket.current.onmessage = (event) => {\r\n            this.setState({...this.state, messageList: [...this.state.messageList, {\r\n                author: 'them',\r\n                type: 'text',\r\n                data: { ...JSON.parse(event.data).data }\r\n                }]})\r\n            console.log(JSON.parse(event.data))\r\n        }\r\n        this.socket.current.onclose = () => {\r\n\r\n        }\r\n        this.socket.current.onerror = () => {\r\n\r\n        }\r\n    }\r\n \r\n    _onMessageWasSent(message) {\r\n        this.setState({...this.state,\r\n            messageList: [...this.state.messageList, message]\r\n        })\r\n        console.log(JSON.stringify(message));\r\n        this.socket.current.send(JSON.stringify(message));\r\n    }\r\n \r\n    _sendMessage(text) {\r\n        if (text.length > 0) {\r\n            this.setState({...this.state,\r\n            messageList: [...this.state.messageList, {\r\n                author: 'them',\r\n                type: 'text',\r\n                data: { text }\r\n            }]\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (<div>\r\n            <Launcher\r\n            agentProfile={{\r\n                teamName: 'Chat with us',\r\n                imageUrl: 'https://a.slack-edge.com/66f9/img/avatars-teams/ava_0001-34.png'\r\n            }}\r\n            onMessageWasSent={this._onMessageWasSent.bind(this)}\r\n            messageList={this.state.messageList}\r\n            showEmoji\r\n            />\r\n        </div>)\r\n    }\r\n}","import './App.css';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport AppRouter from './components/AppRouter';\r\nimport NavBar from './components/NavBar';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Context } from './index';\r\nimport { check } from './http/userAPI';\r\nimport { Spinner } from 'react-bootstrap';\r\nimport Footer from './components/Footer';\r\nimport Chat from './components/Chat';\r\n\r\nfunction App() {\r\n  const { user } = useContext(Context);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (localStorage.getItem('token')) {\r\n      check().then((data) => {\r\n        user.setUser(data); // changed\r\n        user.setIsAuth(true);\r\n      }).finally(() => {\r\n        setLoading(false);\r\n      })\r\n    } else {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  if(loading) {\r\n    return (\r\n      <div className=\"row d-flex justify-content-center align-content-center\" style={{height: 300}}> \r\n        <Spinner animation=\"border\"></Spinner>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <NavBar></NavBar>\r\n      <AppRouter></AppRouter>\r\n      <Footer></Footer>\r\n      <Chat></Chat>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default observer(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {makeAutoObservable} from 'mobx';\r\n\r\nexport default class UserStore {\r\n    constructor() {\r\n        this._isAuth = false;\r\n        this._user = {};\r\n        this._goods = [];\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setIsAuth(bool) {\r\n        this._isAuth = bool;\r\n    }\r\n\r\n    setUser(user) {\r\n        this._user = user;\r\n    }\r\n\r\n    setGoods(device) {\r\n        this._goods.push(device);\r\n    }\r\n\r\n    get isAuth() {\r\n        return this._isAuth;\r\n    }\r\n\r\n    get user() {\r\n        return this._user;\r\n    }\r\n\r\n    get goods() {\r\n        return this._goods;\r\n    }\r\n}","import {makeAutoObservable} from 'mobx';\r\n\r\nexport default class DeviceStore {\r\n    constructor() {\r\n        this._types = [\r\n            {id: 1, name: 'Fridges'},\r\n            {id: 2, name: 'Smartphones'},\r\n            {id: 3, name: 'Laptops'},\r\n            {id: 4, name: 'Stoves'}\r\n        ];\r\n        this._brands = [\r\n            {id: 1, name: 'Samsung'},\r\n            {id: 2, name: 'Nokia'}\r\n        ];\r\n        this._devices = [\r\n            \r\n        ];\r\n        this._devicesForSlider = [\r\n            \r\n        ];\r\n        this._selectedType = {};\r\n        this._selectedBrand = {};\r\n        this._page = 1;\r\n        this._totalCount = 0;\r\n        this._limit = 8;\r\n        this._likedDevice = [];\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    setTypes(types) {\r\n        this._types = types\r\n    }\r\n\r\n    setBrands(brands) {\r\n        this._brands = brands\r\n    }\r\n\r\n    setDevices(devices) {\r\n        this._devices = devices\r\n    }\r\n\r\n    setSelectedType(type) {\r\n        this.setPage(1)\r\n        this._selectedType = type\r\n    }\r\n\r\n    setSelectedBrand(brand) {\r\n        this.setPage(1)\r\n        this._selectedBrand = brand\r\n    }\r\n\r\n    setPage(page) {\r\n        this._page = page\r\n    }\r\n\r\n    setTotalCount(total) {\r\n        this._totalCount = total\r\n    }\r\n\r\n    setLimit(limit) {\r\n        this._limit = limit\r\n    }\r\n\r\n    setLikedDevice(obj) {\r\n        let arr = this._likedDevice.filter((el) => el.id === obj.id);\r\n        if (arr.length !== 0) {\r\n            arr[0].rating = obj.rating;\r\n        }\r\n        else {\r\n            this._likedDevice.push(obj);\r\n        }\r\n    }\r\n\r\n    setDevicesForSlider(devices) {\r\n        this._devicesForSlider = devices\r\n    }\r\n\r\n    get types() {\r\n        return this._types\r\n    }\r\n    get brands() {\r\n        return this._brands\r\n    }\r\n    get devices() {\r\n        return this._devices\r\n    }\r\n    get selectedType() {\r\n        return this._selectedType\r\n    }\r\n    get selectedBrand() {\r\n        return this._selectedBrand\r\n    }\r\n    get page() {\r\n        return this._page\r\n    }\r\n    get total() {\r\n        return this._totalCount\r\n    }\r\n    get limit() {\r\n        return this._limit\r\n    }\r\n    get likedDevice() {\r\n        return this._likedDevice\r\n    }\r\n    get devicesForSlider() {\r\n        return this._devicesForSlider\r\n    }\r\n}","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UserStore from './store/UserStore';\nimport DeviceStore from './store/DeviceStore';\n\nexport const Context = createContext(null);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Context.Provider value={\n      {\n        user: new UserStore(),\n        device: new DeviceStore()\n      }\n    }>\n      <App />\n    </Context.Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayColumn\":\"DevicePage_displayColumn__2xfJ0\"};"],"sourceRoot":""}